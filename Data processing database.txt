CREATE DATABASE order_processing;

USE order_processing;

CREATE TABLE salesman 
(
	salesman_id INT (4), 
	name VARCHAR (20), 
	city VARCHAR (20), 
	commission VARCHAR (20), 
	PRIMARY KEY (salesman_id)
);

CREATE TABLE customer 
(
	customer_id INT (4), 
	cust_name VARCHAR (20), 
	city VARCHAR (20), 
	grade INT (3),
    salesman_id INT (4),
	PRIMARY KEY (customer_id), 
	FOREIGN KEY (salesman_id) REFERENCES salesman (salesman_id) ON DELETE SET NULL
);

CREATE TABLE orders 
(
	ord_no INT (5), 
	purchase_amt REAL (10, 2), 
	ord_date DATE, 
    customer_id INT (4),
    salesman_id INT (4), 
	PRIMARY KEY (ord_no), 
	FOREIGN KEY (customer_id) REFERENCES customer (customer_id) ON DELETE CASCADE, 
	FOREIGN KEY (salesman_id) REFERENCES salesman (salesman_id) ON DELETE CASCADE
);

INSERT INTO salesman VALUES (1000, 'JOHN','BANGALORE','25 %'); 
INSERT INTO salesman VALUES (2000, 'RAVI','BANGALORE','20 %'); 
INSERT INTO salesman VALUES (3000, 'KUMAR','MYSORE','15 %'); 
INSERT INTO salesman VALUES (4000, 'SMITH','DELHI','30 %'); 
INSERT INTO salesman VALUES (5000, 'HARSHA','HYDRABAD','15 %'); 

INSERT INTO customer VALUES (10, 'PREETHI','BANGALORE', 100, 1000); 
INSERT INTO customer VALUES (11, 'VIVEK','MANGALORE', 300, 1000); 
INSERT INTO customer VALUES (12, 'BHASKAR','CHENNAI', 400, 2000); 
INSERT INTO customer VALUES (13, 'CHETHAN','BANGALORE', 200, 2000); 
INSERT INTO customer VALUES (14, 'MAMATHA','BANGALORE', 400, 3000); 


INSERT INTO orders VALUES (50, 5000, '2017-05-04', 10, 1000); 
INSERT INTO orders VALUES (51, 450, '2017-01-20', 10, 2000);
INSERT INTO orders VALUES (52, 1000, '2017-02-24', 13, 2000); 
INSERT INTO orders VALUES (53, 3500, '2017-04-13', 14, 3000); 
INSERT INTO orders VALUES (54, 550, '2017-03-09', 12, 2000);


SELECT GRADE, COUNT (DISTINCT CUSTOMER_ID) 
FROM CUSTOMER1 
GROUP BY GRADE 
HAVING GRADE > (SELECT AVG(GRADE) 
FROM CUSTOMER1 
WHERE CITY='BANGALORE');

SELECT SALESMAN_ID, NAME 
FROM SALESMAN A 
WHERE 1 < (SELECT COUNT (*) 
FROM CUSTOMER1 
WHERE SALESMAN_ID=A.SALESMAN_ID);

SELECT SALESMAN.SALESMAN_ID, NAME, CUST_NAME, COMMISSION 
FROM SALESMAN, CUSTOMER1 
WHERE SALESMAN.CITY = CUSTOMER1.CITY 
UNION 
SELECT SALESMAN_ID, NAME, 'NO MATCH', COMMISSION 
FROM SALESMAN 
WHERE NOT CITY = ANY 
(SELECT CITY 
FROM CUSTOMER1) 
ORDER BY 2 DESC;

CREATE VIEW ELITSALESMAN AS 
SELECT B.ORD_DATE, A.SALESMAN_ID, A.NAME 
FROM SALESMAN A, ORDERS B
WHERE A.SALESMAN_ID = B.SALESMAN_ID 
AND B.PURCHASE_AMT=(SELECT MAX (PURCHASE_AMT) 
FROM ORDERS C 
WHERE C.ORD_DATE = B.ORD_DATE);

Use ON DELETE CASCADE at the end of foreign key definitions while creating child table orders and then execute the following: 
Use ON DELETE SET NULL at the end of foreign key definitions while creating child table customers and then executes the following: 
DELETE FROM SALESMAN 
WHERE SALESMAN_ID=1000;

